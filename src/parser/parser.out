Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    CLASS
    ELSE
    FALSE
    FOR
    FROM
    IF
    IMPORT
    IN
    NONE
    RANGE
    RETURN
    TRUE
    WHILE

Grammar

Rule 0     S' -> program
Rule 1     program -> statements
Rule 2     program -> empty
Rule 3     empty -> <empty>
Rule 4     statements -> statements statement
Rule 5     statements -> statements NEWLINE
Rule 6     statements -> statement
Rule 7     statement -> DEF IDENTIFIER LPAREN params RPAREN COLON NEWLINE
Rule 8     statement -> IDENTIFIER EQUALS expression
Rule 9     statement -> IDENTIFIER EQUALS expression NEWLINE
Rule 10    statement -> expression
Rule 11    statement -> expression NEWLINE
Rule 12    params -> params COMMA IDENTIFIER
Rule 13    params -> IDENTIFIER
Rule 14    params -> <empty>
Rule 15    expression -> expression PLUS expression
Rule 16    expression -> expression MINUS expression
Rule 17    expression -> expression TIMES expression
Rule 18    expression -> expression DIVIDE expression
Rule 19    expression -> NUMBER
Rule 20    expression -> IDENTIFIER
Rule 21    expression -> IDENTIFIER LPAREN args RPAREN
Rule 22    expression -> PRINT LPAREN args RPAREN
Rule 23    expression -> STRING
Rule 24    args -> args COMMA expression
Rule 25    args -> expression
Rule 26    args -> <empty>

Terminals, with rules where they appear

AS                   : 
CLASS                : 
COLON                : 7
COMMA                : 12 24
DEF                  : 7
DIVIDE               : 18
ELSE                 : 
EQUALS               : 8 9
FALSE                : 
FOR                  : 
FROM                 : 
IDENTIFIER           : 7 8 9 12 13 20 21
IF                   : 
IMPORT               : 
IN                   : 
LPAREN               : 7 21 22
MINUS                : 16
NEWLINE              : 5 7 9 11
NONE                 : 
NUMBER               : 19
PLUS                 : 15
PRINT                : 22
RANGE                : 
RETURN               : 
RPAREN               : 7 21 22
STRING               : 23
TIMES                : 17
TRUE                 : 
WHILE                : 
error                : 

Nonterminals, with rules where they appear

args                 : 21 22 24
empty                : 2
expression           : 8 9 10 11 15 15 16 16 17 17 18 18 24 25
params               : 7 12
program              : 0
statement            : 4 6
statements           : 1 4 5

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statements
    (2) program -> . empty
    (4) statements -> . statements statement
    (5) statements -> . statements NEWLINE
    (6) statements -> . statement
    (3) empty -> .
    (7) statement -> . DEF IDENTIFIER LPAREN params RPAREN COLON NEWLINE
    (8) statement -> . IDENTIFIER EQUALS expression
    (9) statement -> . IDENTIFIER EQUALS expression NEWLINE
    (10) statement -> . expression
    (11) statement -> . expression NEWLINE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . NUMBER
    (20) expression -> . IDENTIFIER
    (21) expression -> . IDENTIFIER LPAREN args RPAREN
    (22) expression -> . PRINT LPAREN args RPAREN
    (23) expression -> . STRING

    $end            reduce using rule 3 (empty -> .)
    DEF             shift and go to state 5
    IDENTIFIER      shift and go to state 6
    NUMBER          shift and go to state 8
    PRINT           shift and go to state 9
    STRING          shift and go to state 10

    program                        shift and go to state 1
    statements                     shift and go to state 2
    empty                          shift and go to state 3
    statement                      shift and go to state 4
    expression                     shift and go to state 7

state 1

    (0) S' -> program .



state 2

    (1) program -> statements .
    (4) statements -> statements . statement
    (5) statements -> statements . NEWLINE
    (7) statement -> . DEF IDENTIFIER LPAREN params RPAREN COLON NEWLINE
    (8) statement -> . IDENTIFIER EQUALS expression
    (9) statement -> . IDENTIFIER EQUALS expression NEWLINE
    (10) statement -> . expression
    (11) statement -> . expression NEWLINE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . NUMBER
    (20) expression -> . IDENTIFIER
    (21) expression -> . IDENTIFIER LPAREN args RPAREN
    (22) expression -> . PRINT LPAREN args RPAREN
    (23) expression -> . STRING

    $end            reduce using rule 1 (program -> statements .)
    NEWLINE         shift and go to state 12
    DEF             shift and go to state 5
    IDENTIFIER      shift and go to state 6
    NUMBER          shift and go to state 8
    PRINT           shift and go to state 9
    STRING          shift and go to state 10

    statement                      shift and go to state 11
    expression                     shift and go to state 7

state 3

    (2) program -> empty .

    $end            reduce using rule 2 (program -> empty .)


state 4

    (6) statements -> statement .

    NEWLINE         reduce using rule 6 (statements -> statement .)
    DEF             reduce using rule 6 (statements -> statement .)
    IDENTIFIER      reduce using rule 6 (statements -> statement .)
    NUMBER          reduce using rule 6 (statements -> statement .)
    PRINT           reduce using rule 6 (statements -> statement .)
    STRING          reduce using rule 6 (statements -> statement .)
    $end            reduce using rule 6 (statements -> statement .)


state 5

    (7) statement -> DEF . IDENTIFIER LPAREN params RPAREN COLON NEWLINE

    IDENTIFIER      shift and go to state 13


state 6

    (8) statement -> IDENTIFIER . EQUALS expression
    (9) statement -> IDENTIFIER . EQUALS expression NEWLINE
    (20) expression -> IDENTIFIER .
    (21) expression -> IDENTIFIER . LPAREN args RPAREN

    EQUALS          shift and go to state 14
    NEWLINE         reduce using rule 20 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 20 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 20 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 20 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 20 (expression -> IDENTIFIER .)
    DEF             reduce using rule 20 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 20 (expression -> IDENTIFIER .)
    NUMBER          reduce using rule 20 (expression -> IDENTIFIER .)
    PRINT           reduce using rule 20 (expression -> IDENTIFIER .)
    STRING          reduce using rule 20 (expression -> IDENTIFIER .)
    $end            reduce using rule 20 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 15


state 7

    (10) statement -> expression .
    (11) statement -> expression . NEWLINE
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for NEWLINE resolved as shift
    DEF             reduce using rule 10 (statement -> expression .)
    IDENTIFIER      reduce using rule 10 (statement -> expression .)
    NUMBER          reduce using rule 10 (statement -> expression .)
    PRINT           reduce using rule 10 (statement -> expression .)
    STRING          reduce using rule 10 (statement -> expression .)
    $end            reduce using rule 10 (statement -> expression .)
    NEWLINE         shift and go to state 16
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20

  ! NEWLINE         [ reduce using rule 10 (statement -> expression .) ]


state 8

    (19) expression -> NUMBER .

    NEWLINE         reduce using rule 19 (expression -> NUMBER .)
    PLUS            reduce using rule 19 (expression -> NUMBER .)
    MINUS           reduce using rule 19 (expression -> NUMBER .)
    TIMES           reduce using rule 19 (expression -> NUMBER .)
    DIVIDE          reduce using rule 19 (expression -> NUMBER .)
    DEF             reduce using rule 19 (expression -> NUMBER .)
    IDENTIFIER      reduce using rule 19 (expression -> NUMBER .)
    NUMBER          reduce using rule 19 (expression -> NUMBER .)
    PRINT           reduce using rule 19 (expression -> NUMBER .)
    STRING          reduce using rule 19 (expression -> NUMBER .)
    $end            reduce using rule 19 (expression -> NUMBER .)
    RPAREN          reduce using rule 19 (expression -> NUMBER .)
    COMMA           reduce using rule 19 (expression -> NUMBER .)


state 9

    (22) expression -> PRINT . LPAREN args RPAREN

    LPAREN          shift and go to state 21


state 10

    (23) expression -> STRING .

    NEWLINE         reduce using rule 23 (expression -> STRING .)
    PLUS            reduce using rule 23 (expression -> STRING .)
    MINUS           reduce using rule 23 (expression -> STRING .)
    TIMES           reduce using rule 23 (expression -> STRING .)
    DIVIDE          reduce using rule 23 (expression -> STRING .)
    DEF             reduce using rule 23 (expression -> STRING .)
    IDENTIFIER      reduce using rule 23 (expression -> STRING .)
    NUMBER          reduce using rule 23 (expression -> STRING .)
    PRINT           reduce using rule 23 (expression -> STRING .)
    STRING          reduce using rule 23 (expression -> STRING .)
    $end            reduce using rule 23 (expression -> STRING .)
    RPAREN          reduce using rule 23 (expression -> STRING .)
    COMMA           reduce using rule 23 (expression -> STRING .)


state 11

    (4) statements -> statements statement .

    NEWLINE         reduce using rule 4 (statements -> statements statement .)
    DEF             reduce using rule 4 (statements -> statements statement .)
    IDENTIFIER      reduce using rule 4 (statements -> statements statement .)
    NUMBER          reduce using rule 4 (statements -> statements statement .)
    PRINT           reduce using rule 4 (statements -> statements statement .)
    STRING          reduce using rule 4 (statements -> statements statement .)
    $end            reduce using rule 4 (statements -> statements statement .)


state 12

    (5) statements -> statements NEWLINE .

    NEWLINE         reduce using rule 5 (statements -> statements NEWLINE .)
    DEF             reduce using rule 5 (statements -> statements NEWLINE .)
    IDENTIFIER      reduce using rule 5 (statements -> statements NEWLINE .)
    NUMBER          reduce using rule 5 (statements -> statements NEWLINE .)
    PRINT           reduce using rule 5 (statements -> statements NEWLINE .)
    STRING          reduce using rule 5 (statements -> statements NEWLINE .)
    $end            reduce using rule 5 (statements -> statements NEWLINE .)


state 13

    (7) statement -> DEF IDENTIFIER . LPAREN params RPAREN COLON NEWLINE

    LPAREN          shift and go to state 22


state 14

    (8) statement -> IDENTIFIER EQUALS . expression
    (9) statement -> IDENTIFIER EQUALS . expression NEWLINE
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . NUMBER
    (20) expression -> . IDENTIFIER
    (21) expression -> . IDENTIFIER LPAREN args RPAREN
    (22) expression -> . PRINT LPAREN args RPAREN
    (23) expression -> . STRING

    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 23
    PRINT           shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 24

state 15

    (21) expression -> IDENTIFIER LPAREN . args RPAREN
    (24) args -> . args COMMA expression
    (25) args -> . expression
    (26) args -> .
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . NUMBER
    (20) expression -> . IDENTIFIER
    (21) expression -> . IDENTIFIER LPAREN args RPAREN
    (22) expression -> . PRINT LPAREN args RPAREN
    (23) expression -> . STRING

    RPAREN          reduce using rule 26 (args -> .)
    COMMA           reduce using rule 26 (args -> .)
    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 23
    PRINT           shift and go to state 9
    STRING          shift and go to state 10

    args                           shift and go to state 25
    expression                     shift and go to state 26

state 16

    (11) statement -> expression NEWLINE .

    NEWLINE         reduce using rule 11 (statement -> expression NEWLINE .)
    DEF             reduce using rule 11 (statement -> expression NEWLINE .)
    IDENTIFIER      reduce using rule 11 (statement -> expression NEWLINE .)
    NUMBER          reduce using rule 11 (statement -> expression NEWLINE .)
    PRINT           reduce using rule 11 (statement -> expression NEWLINE .)
    STRING          reduce using rule 11 (statement -> expression NEWLINE .)
    $end            reduce using rule 11 (statement -> expression NEWLINE .)


state 17

    (15) expression -> expression PLUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . NUMBER
    (20) expression -> . IDENTIFIER
    (21) expression -> . IDENTIFIER LPAREN args RPAREN
    (22) expression -> . PRINT LPAREN args RPAREN
    (23) expression -> . STRING

    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 23
    PRINT           shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 27

state 18

    (16) expression -> expression MINUS . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . NUMBER
    (20) expression -> . IDENTIFIER
    (21) expression -> . IDENTIFIER LPAREN args RPAREN
    (22) expression -> . PRINT LPAREN args RPAREN
    (23) expression -> . STRING

    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 23
    PRINT           shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 28

state 19

    (17) expression -> expression TIMES . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . NUMBER
    (20) expression -> . IDENTIFIER
    (21) expression -> . IDENTIFIER LPAREN args RPAREN
    (22) expression -> . PRINT LPAREN args RPAREN
    (23) expression -> . STRING

    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 23
    PRINT           shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 29

state 20

    (18) expression -> expression DIVIDE . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . NUMBER
    (20) expression -> . IDENTIFIER
    (21) expression -> . IDENTIFIER LPAREN args RPAREN
    (22) expression -> . PRINT LPAREN args RPAREN
    (23) expression -> . STRING

    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 23
    PRINT           shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 30

state 21

    (22) expression -> PRINT LPAREN . args RPAREN
    (24) args -> . args COMMA expression
    (25) args -> . expression
    (26) args -> .
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . NUMBER
    (20) expression -> . IDENTIFIER
    (21) expression -> . IDENTIFIER LPAREN args RPAREN
    (22) expression -> . PRINT LPAREN args RPAREN
    (23) expression -> . STRING

    RPAREN          reduce using rule 26 (args -> .)
    COMMA           reduce using rule 26 (args -> .)
    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 23
    PRINT           shift and go to state 9
    STRING          shift and go to state 10

    args                           shift and go to state 31
    expression                     shift and go to state 26

state 22

    (7) statement -> DEF IDENTIFIER LPAREN . params RPAREN COLON NEWLINE
    (12) params -> . params COMMA IDENTIFIER
    (13) params -> . IDENTIFIER
    (14) params -> .

    IDENTIFIER      shift and go to state 32
    RPAREN          reduce using rule 14 (params -> .)
    COMMA           reduce using rule 14 (params -> .)

    params                         shift and go to state 33

state 23

    (20) expression -> IDENTIFIER .
    (21) expression -> IDENTIFIER . LPAREN args RPAREN

    NEWLINE         reduce using rule 20 (expression -> IDENTIFIER .)
    PLUS            reduce using rule 20 (expression -> IDENTIFIER .)
    MINUS           reduce using rule 20 (expression -> IDENTIFIER .)
    TIMES           reduce using rule 20 (expression -> IDENTIFIER .)
    DIVIDE          reduce using rule 20 (expression -> IDENTIFIER .)
    DEF             reduce using rule 20 (expression -> IDENTIFIER .)
    IDENTIFIER      reduce using rule 20 (expression -> IDENTIFIER .)
    NUMBER          reduce using rule 20 (expression -> IDENTIFIER .)
    PRINT           reduce using rule 20 (expression -> IDENTIFIER .)
    STRING          reduce using rule 20 (expression -> IDENTIFIER .)
    $end            reduce using rule 20 (expression -> IDENTIFIER .)
    RPAREN          reduce using rule 20 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 20 (expression -> IDENTIFIER .)
    LPAREN          shift and go to state 15


state 24

    (8) statement -> IDENTIFIER EQUALS expression .
    (9) statement -> IDENTIFIER EQUALS expression . NEWLINE
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for NEWLINE resolved as shift
    DEF             reduce using rule 8 (statement -> IDENTIFIER EQUALS expression .)
    IDENTIFIER      reduce using rule 8 (statement -> IDENTIFIER EQUALS expression .)
    NUMBER          reduce using rule 8 (statement -> IDENTIFIER EQUALS expression .)
    PRINT           reduce using rule 8 (statement -> IDENTIFIER EQUALS expression .)
    STRING          reduce using rule 8 (statement -> IDENTIFIER EQUALS expression .)
    $end            reduce using rule 8 (statement -> IDENTIFIER EQUALS expression .)
    NEWLINE         shift and go to state 34
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20

  ! NEWLINE         [ reduce using rule 8 (statement -> IDENTIFIER EQUALS expression .) ]


state 25

    (21) expression -> IDENTIFIER LPAREN args . RPAREN
    (24) args -> args . COMMA expression

    RPAREN          shift and go to state 35
    COMMA           shift and go to state 36


state 26

    (25) args -> expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 25 (args -> expression .)
    COMMA           reduce using rule 25 (args -> expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20


state 27

    (15) expression -> expression PLUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    NEWLINE         reduce using rule 15 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 15 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 15 (expression -> expression PLUS expression .)
    DEF             reduce using rule 15 (expression -> expression PLUS expression .)
    IDENTIFIER      reduce using rule 15 (expression -> expression PLUS expression .)
    NUMBER          reduce using rule 15 (expression -> expression PLUS expression .)
    PRINT           reduce using rule 15 (expression -> expression PLUS expression .)
    STRING          reduce using rule 15 (expression -> expression PLUS expression .)
    $end            reduce using rule 15 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 15 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 15 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20

  ! TIMES           [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]


state 28

    (16) expression -> expression MINUS expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    NEWLINE         reduce using rule 16 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 16 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 16 (expression -> expression MINUS expression .)
    DEF             reduce using rule 16 (expression -> expression MINUS expression .)
    IDENTIFIER      reduce using rule 16 (expression -> expression MINUS expression .)
    NUMBER          reduce using rule 16 (expression -> expression MINUS expression .)
    PRINT           reduce using rule 16 (expression -> expression MINUS expression .)
    STRING          reduce using rule 16 (expression -> expression MINUS expression .)
    $end            reduce using rule 16 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 16 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 16 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20

  ! TIMES           [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]


state 29

    (17) expression -> expression TIMES expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    NEWLINE         reduce using rule 17 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 17 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 17 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 17 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 17 (expression -> expression TIMES expression .)
    DEF             reduce using rule 17 (expression -> expression TIMES expression .)
    IDENTIFIER      reduce using rule 17 (expression -> expression TIMES expression .)
    NUMBER          reduce using rule 17 (expression -> expression TIMES expression .)
    PRINT           reduce using rule 17 (expression -> expression TIMES expression .)
    STRING          reduce using rule 17 (expression -> expression TIMES expression .)
    $end            reduce using rule 17 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 17 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 17 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 30

    (18) expression -> expression DIVIDE expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    NEWLINE         reduce using rule 18 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 18 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 18 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 18 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 18 (expression -> expression DIVIDE expression .)
    DEF             reduce using rule 18 (expression -> expression DIVIDE expression .)
    IDENTIFIER      reduce using rule 18 (expression -> expression DIVIDE expression .)
    NUMBER          reduce using rule 18 (expression -> expression DIVIDE expression .)
    PRINT           reduce using rule 18 (expression -> expression DIVIDE expression .)
    STRING          reduce using rule 18 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 18 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 18 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 18 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 17 ]
  ! MINUS           [ shift and go to state 18 ]
  ! TIMES           [ shift and go to state 19 ]
  ! DIVIDE          [ shift and go to state 20 ]


state 31

    (22) expression -> PRINT LPAREN args . RPAREN
    (24) args -> args . COMMA expression

    RPAREN          shift and go to state 37
    COMMA           shift and go to state 36


state 32

    (13) params -> IDENTIFIER .

    RPAREN          reduce using rule 13 (params -> IDENTIFIER .)
    COMMA           reduce using rule 13 (params -> IDENTIFIER .)


state 33

    (7) statement -> DEF IDENTIFIER LPAREN params . RPAREN COLON NEWLINE
    (12) params -> params . COMMA IDENTIFIER

    RPAREN          shift and go to state 38
    COMMA           shift and go to state 39


state 34

    (9) statement -> IDENTIFIER EQUALS expression NEWLINE .

    NEWLINE         reduce using rule 9 (statement -> IDENTIFIER EQUALS expression NEWLINE .)
    DEF             reduce using rule 9 (statement -> IDENTIFIER EQUALS expression NEWLINE .)
    IDENTIFIER      reduce using rule 9 (statement -> IDENTIFIER EQUALS expression NEWLINE .)
    NUMBER          reduce using rule 9 (statement -> IDENTIFIER EQUALS expression NEWLINE .)
    PRINT           reduce using rule 9 (statement -> IDENTIFIER EQUALS expression NEWLINE .)
    STRING          reduce using rule 9 (statement -> IDENTIFIER EQUALS expression NEWLINE .)
    $end            reduce using rule 9 (statement -> IDENTIFIER EQUALS expression NEWLINE .)


state 35

    (21) expression -> IDENTIFIER LPAREN args RPAREN .

    NEWLINE         reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)
    PLUS            reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)
    MINUS           reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)
    TIMES           reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)
    DIVIDE          reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)
    DEF             reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)
    IDENTIFIER      reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)
    NUMBER          reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)
    PRINT           reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)
    STRING          reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)
    $end            reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)
    RPAREN          reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)
    COMMA           reduce using rule 21 (expression -> IDENTIFIER LPAREN args RPAREN .)


state 36

    (24) args -> args COMMA . expression
    (15) expression -> . expression PLUS expression
    (16) expression -> . expression MINUS expression
    (17) expression -> . expression TIMES expression
    (18) expression -> . expression DIVIDE expression
    (19) expression -> . NUMBER
    (20) expression -> . IDENTIFIER
    (21) expression -> . IDENTIFIER LPAREN args RPAREN
    (22) expression -> . PRINT LPAREN args RPAREN
    (23) expression -> . STRING

    NUMBER          shift and go to state 8
    IDENTIFIER      shift and go to state 23
    PRINT           shift and go to state 9
    STRING          shift and go to state 10

    expression                     shift and go to state 40

state 37

    (22) expression -> PRINT LPAREN args RPAREN .

    NEWLINE         reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)
    PLUS            reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)
    MINUS           reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)
    TIMES           reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)
    DIVIDE          reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)
    DEF             reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)
    IDENTIFIER      reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)
    NUMBER          reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)
    PRINT           reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)
    STRING          reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)
    $end            reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)
    RPAREN          reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)
    COMMA           reduce using rule 22 (expression -> PRINT LPAREN args RPAREN .)


state 38

    (7) statement -> DEF IDENTIFIER LPAREN params RPAREN . COLON NEWLINE

    COLON           shift and go to state 41


state 39

    (12) params -> params COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 42


state 40

    (24) args -> args COMMA expression .
    (15) expression -> expression . PLUS expression
    (16) expression -> expression . MINUS expression
    (17) expression -> expression . TIMES expression
    (18) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 24 (args -> args COMMA expression .)
    COMMA           reduce using rule 24 (args -> args COMMA expression .)
    PLUS            shift and go to state 17
    MINUS           shift and go to state 18
    TIMES           shift and go to state 19
    DIVIDE          shift and go to state 20


state 41

    (7) statement -> DEF IDENTIFIER LPAREN params RPAREN COLON . NEWLINE

    NEWLINE         shift and go to state 43


state 42

    (12) params -> params COMMA IDENTIFIER .

    RPAREN          reduce using rule 12 (params -> params COMMA IDENTIFIER .)
    COMMA           reduce using rule 12 (params -> params COMMA IDENTIFIER .)


state 43

    (7) statement -> DEF IDENTIFIER LPAREN params RPAREN COLON NEWLINE .

    NEWLINE         reduce using rule 7 (statement -> DEF IDENTIFIER LPAREN params RPAREN COLON NEWLINE .)
    DEF             reduce using rule 7 (statement -> DEF IDENTIFIER LPAREN params RPAREN COLON NEWLINE .)
    IDENTIFIER      reduce using rule 7 (statement -> DEF IDENTIFIER LPAREN params RPAREN COLON NEWLINE .)
    NUMBER          reduce using rule 7 (statement -> DEF IDENTIFIER LPAREN params RPAREN COLON NEWLINE .)
    PRINT           reduce using rule 7 (statement -> DEF IDENTIFIER LPAREN params RPAREN COLON NEWLINE .)
    STRING          reduce using rule 7 (statement -> DEF IDENTIFIER LPAREN params RPAREN COLON NEWLINE .)
    $end            reduce using rule 7 (statement -> DEF IDENTIFIER LPAREN params RPAREN COLON NEWLINE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 7 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 24 resolved as shift
